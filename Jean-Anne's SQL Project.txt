Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000 
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = primary(id) =10000; foreign(business_id)= 8090
vi. Checkin = 493
vii. Photo = primary(id) =10000; foreign(business_id)= 6493
viii. Tip = business_id=3979
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	SQL code used to arrive at answer:
select *
from user
where id is null | name is null |review_count is null | yelping_since is null | 
useful is null | funny is null | cool is null | fans is null | average_stars is null | 
compliment_hot is null | compliment_hot is null | compliment_more is null | 
compliment_profile is null | compliment_cute is null | compliment_list is null | 
compliment_note is null | compliment_plain is null | compliment_cool is null | 
compliment_funny is null | compliment_writer is null | compliment_photos is null	

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:		max:		avg:
		1		5		3.7082
	
	ii. Table: Business, Column: Stars
	
		min:		max:		avg:
		1		5		3.6549
	
	iii. Table: Tip, Column: Likes
	
		min:		max:		avg:
		0		2		0.0144	
	
	iv. Table: Checkin, Column: Count
	
		min:		max:		avg:
		1		53		1.9414
	
	v. Table: User, Column: Review_count
	
		min:		max:		avg:
		0		2000		24.2995


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city
	  , review_count
	  from business
	  order by review_count desc;
	
	Copy and Paste the Result Below:
	+------------+--------------+
| city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+------------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)


	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon



SQL code used to arrive at answer:
select stars
, review_count
from business
where city = 'Avon';

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------------+
| stars | review_count |
+-------+--------------+
|   2.5 |            3 |
|   4.0 |            4 |
|   5.0 |            3 |
|   3.5 |            7 |
|   1.5 |           10 |
|   3.5 |           31 |
|   4.5 |           31 |
|   3.5 |           50 |
|   2.5 |            3 |
|   4.0 |           17 |
+-------+--------------+


ii. Beachwood

SQL code used to arrive at answer:
select stars
, review_count
from business
where city = 'Beachwood';

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+--------------+
| stars | review_count |
+-------+--------------+
|   3.0 |            8 |
|   3.0 |            3 |
|   4.5 |           14 |
|   5.0 |            6 |
|   4.0 |           69 |
|   4.5 |            3 |
|   5.0 |            4 |
|   2.0 |            8 |
|   3.5 |            3 |
|   3.5 |            3 |
|   5.0 |            6 |
|   2.5 |            3 |
|   5.0 |            3 |
|   5.0 |            4 |
+-------+--------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	select name
		, review_count	
		from user
		order by review_count desc;
		
	Copy and Paste the Result Below:
	+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |
| .Hon      |         1246 |
| William   |         1215 |
| Harald    |         1153 |
| eric      |         1116 |
| Roanna    |         1039 |
| Mimi      |          968 |
| Christine |          930 |
| Ed        |          904 |
| Nicole    |          864 |
| Fran      |          862 |
| Mark      |          861 |
| Christina |          842 |
| Dominic   |          836 |
| Lissa     |          834 |
| Lisa      |          813 |
| Alison    |          775 |
| Sui       |          754 |
| Tim       |          702 |
| L         |          696 |
| Angela    |          694 |
| Crissy    |          676 |
| Lyn       |          675 |
+-----------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)
	


8. Does posing more reviews correlate with more fans?
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
Please explain your findings and interpretation of the results:
	
There appears to be no relationship.  The number of fans is distributed somewhat randomly as 
review_count increases.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	Love query returns 1780 results.  Hate query returns 232 results.

	SQL code used to arrive at answer:
select
	"text"
	from review
	where "text" like '%love%';

select
	"text"
	from review
	where "text" like '%love%';
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name
		, review_count
		from user
		order by review_count desc;

	
	Copy and Paste the Result Below:

	+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:  I calculated the percentage of fans who rated reviews useful or funny.
	select
	  name
	, fans
	, useful
	, funny
	, review_count
	from user
	order by fans desc;
	
Copy and Paste the Result Below:
	
	name      | fans | useful |  funny | review_count |
+-----------+------+--------+--------+--------------+
| Amy       |  503 |   3226 |   2554 |          609 |
| Mimi      |  497 |    257 |    138 |          968 |
| Harald    |  311 | 122921 | 122419 |         1153 |
| Gerald    |  253 |  17524 |   2324 |         2000 |
| Christine |  173 |   4834 |   6646 |          930 |
| Lisa      |  159 |     48 |     13 |          813 |
| Cat       |  133 |   1062 |    672 |          377 |
| William   |  126 |   9363 |   9361 |         1215 |
| Fran      |  124 |   9851 |   7606 |          862 |
| Lissa     |  120 |    455 |    150 |          834 |

	Please explain your findings and interpretation of the results:
	
	All of the top 10 users with most fans are also useful and funny.  100%
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours? 
Yes, compared to the ones with 2 stars, the ones with 3 stars have longer hours.  They’re open earlier.


ii. Do the two groups you chose to analyze have a different number of reviews? 
The ones with three stars also have more reviews.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
When I add b.postal_code to the select statement, I can see that the ones with 2 stars are in a different
zip than the ones with three.  Perhaps the ones with 3 stars are in a more “desirable” location.

SQL code used for analysis:
select
  b.city
, b.stars
, b.review_count
, b.is_open
, c.category
, h.hours
from ((business b inner join category c  on c.business_id = b.id)
inner join hours h on h.business_id = b.id)
  where city = 'Phoenix' and category = 'Restaurants' and (stars = '2.0' or stars = '3.0')
+---------+-------+--------------+---------+-------------+----------------------+
| city    | stars | review_count | is_open | category    | hours                |
+---------+-------+--------------+---------+-------------+----------------------+
| Phoenix |   2.0 |            8 |       1 | Restaurants | Monday|5:00-23:00    |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Tuesday|5:00-23:00   |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Friday|5:00-0:00     |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Wednesday|5:00-23:00 |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Thursday|5:00-23:00  |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Sunday|5:00-23:00    |
| Phoenix |   2.0 |            8 |       1 | Restaurants | Saturday|5:00-0:00   |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Monday|11:00-0:00    |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Tuesday|11:00-0:00   |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Friday|11:00-2:00    |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Wednesday|11:00-0:00 |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Thursday|11:00-2:00  |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Sunday|9:00-0:00     |
| Phoenix |   3.0 |           60 |       1 | Restaurants | Saturday|9:00-2:00   |

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: the ones that are open have more reviews.  Perhaps there is more awareness of those businesses, 
and the ones that are closed might have closed due to lack of awareness.
         
         
ii. Difference 2: the ones that are closed surprisingly have a higher average star rating.  If only they had more 
awareness, perhaps they could have stayed open.
         
         
         
SQL code used for analysis:

	select
  b.city
, b.stars
, b.review_count
, b.is_open
, c.category
, h.hours
from ((business b inner join category c  on c.business_id = b.id)
inner join hours h on h.business_id = b.id)
  where city = 'Phoenix'
  group by is_open;
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         I decided to imagine that I am planning a trip and that I could go anywhere I wanted, and I wanted to
 explore all businesses with 4 or more stars flagged and are cool.  My thought was that I would pick a city 
with the most highly rated, cool places to go.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The first thing I noticed is that there are few businesses with the cool flag, so I decided that star rating 
would have to be the primary indicator.  I noticed lots of results in Las Vegas in Phoenix so I added city to
 the where statement.  Many results were not useful, things like circle k, or auto shops or bridal salons.  
So I decided I would need to add category to my query, and since cool from the reviews table was not adding 
anything useful I just altered my join to be business and category tables instead of business and review table.


                  
iii. Output of your finished dataset:
I found a good hike and some good restaurants in Phoenix;

+---------+-----------------------+-------+--------------+----------+
| city    | name                  | stars | review_count | category |
+---------+-----------------------+-------+--------------+----------+
| Phoenix | Apache Wash Trailhead |   5.0 |            9 | Hiking   |
+---------+-----------------------+-------+--------------+----------+


+---------+----------------------------------------+-------+--------------+-------------+
| city    | name                                   | stars | review_count | category    |
+---------+----------------------------------------+-------+--------------+-------------+
| Phoenix | Charlie D's Catfish & Chicken          |   4.5 |            7 | Restaurants |
| Phoenix | Matt's Big Breakfast                   |   4.0 |          188 | Restaurants |
| Phoenix | Bootleggers Modern American Smokehouse |   4.0 |          431 | Restaurants |
+---------+----------------------------------------+-------+--------------+-------------+
         
I also ran the query for Charlotte because that’s where I live.  I sorted by number of reviews, and it was cool
to see so many businesses that are familiar to me.

+-----------+-------------------------------+-------+--------------+----------+
| city      | name                          | stars | review_count | category |
+-----------+-------------------------------+-------+--------------+----------+
| Charlotte | Pinky's Westside Grill        |   4.0 |          715 |     None |
| Charlotte | Jasmine Grill                 |   4.5 |          328 |     None |
| Charlotte | Pio Pio                       |   4.0 |          299 |     None |
| Charlotte | Duckworth's Grill & Taphouse  |   4.0 |          262 |     None |
| Charlotte | 131 Main                      |   4.0 |          247 |     None |
| Charlotte | Crispy Crepe                  |   4.0 |          238 |     None |
| Charlotte | Intermezzo Pizzeria and Cafe  |   4.0 |          231 |     None |
| Charlotte | Kid Cashew                    |   4.0 |          225 |     None |
| Charlotte | Local Loaf                    |   4.0 |          183 |     None |
| Charlotte | Yama Izakaya                  |   4.0 |          171 |     None |
| Charlotte | Mattie's Diner                |   4.0 |          165 |     None |
| Charlotte | Bill Spoon's Barbecue         |   4.0 |          146 |     None |
| Charlotte | Zack's Hamburgers             |   4.5 |          120 |     None |
| Charlotte | Davidson Street Public House  |   4.0 |          118 |     None |
| Charlotte | Stagioni Four Seasons of Food |   4.0 |          108 |     None |
| Charlotte | Noda Bodega                   |   4.5 |          103 |     None |
| Charlotte | Meskerem                      |   4.0 |           99 |     None |
| Charlotte | Tea Fusion Cafe               |   4.5 |           96 |     None |
| Charlotte | Las Margaritas                |   4.0 |           85 |     None |
| Charlotte | Birdsong Brewing              |   4.5 |           84 |     None |
| Charlotte | Que Onda Tacos + Tequila      |   4.0 |           83 |     None |
| Charlotte | Soul Central                  |   4.5 |           81 |     None |
| Charlotte | Pearl. Dentistry Reimagined   |   5.0 |           79 |     None |
| Charlotte | Persuasian Restaurant         |   4.0 |           78 |     None |
| Charlotte | Pho Huong Que                 |   4.0 |           78 |     None |
+-----------+-------------------------------+-------+--------------+----------+

iv. Provide the SQL code you used to create your final dataset:
select
  b.city
  , b.name
, b.stars
, b.review_count
, c.category
from business b
left join category c on c.business_id = b.id
where b.stars >= 4 and city = 'Phoenix' and category = 'Restaurants'
order by review_count desc;


